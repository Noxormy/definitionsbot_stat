{"version":3,"sources":["i18next.js","helpers/collections.js","Components/UsersCount/index.js","Components/Users/index.js","Components/PopularWords/index.js","Components/Using/index.js","Pages/Main/index.js","Components/Header/index.js","Components/Loading/index.js","App.js","index.js","helpers/configs.js"],"names":["resources","en","translation","i18n","use","initReactI18next","init","lng","interpolation","escapeValue","DAY_SECONDS","getForDays","items","start","end","now","Date","today","parseInt","getFullYear","getMonth","getDate","getTime","toFixed","filter","item","time","UsersCount","count","t","useTranslation","className","OPTIONS","responsive","scales","x","grid","color","y","ticks","stepSize","maintainAspectRatio","Users","day","users","usersData","countOfUserBefore","length","dataForDays","i","push","data","labels","Array","fill","map","idx","reverse","datasets","label","backgroundColor","borderColor","height","options","PopularWords","words","popularity","toLowerCase","forEach","top","Object","keys","sort","first","second","slice","Using","Main","usersRef","useFirestore","collection","useFirestoreCollectionData","messagesRef","messages","usingCount","text","Header","Loading","App","fallback","traceId","exact","path","ReactDOM","render","StrictMode","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","suspense","document","getElementById"],"mappings":"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","file":"static/js/main.7d2b74b8.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport translationEN from './Locales/en.json';\n\n// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\nconst resources = {\n    en: {\n        translation: translationEN\n    }\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: \"en\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n        // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n        // if you're using a language detector, do not define the lng option\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\nexport {i18n};","export const USERS = \"users\"\nexport const MESSAGES = \"messages\"\n\nconst DAY_SECONDS = 86400\nexport function getForDays(items, start, end= 0) {\n    const now = new Date()\n    const today = parseInt((new Date(now.getFullYear(), now.getMonth(), now.getDate()).getTime() / 1000).toFixed())\n    return items.filter(item => (item.time > today - (start - 1) * DAY_SECONDS) && (item.time < today - (end - 1) * DAY_SECONDS))\n}\n\nexport function getForOneDay(items, day) {\n    return getForDays(items, day, day - 1)\n}","import './index.sass'\nimport { useTranslation } from 'react-i18next'\n\nfunction UsersCount({count}) {\n    const {t} = useTranslation()\n    return (\n        <div className=\"stat count_of_users\">\n            <h3>{t('count_of_users')}</h3>\n            <div className=\"content\">\n                <span>{count}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default UsersCount\n","import './index.sass'\nimport { useTranslation } from 'react-i18next'\nimport { Line } from 'react-chartjs-2'\nimport {getForDays, getForOneDay} from \"../../helpers/collections\";\nimport {color} from \"chart.js/helpers\";\n\nconst DAY_SECONDS = 86400\nconst OPTIONS = {\n    responsive: true,\n    scales: {\n        x: {\n           grid: {\n               color: '#5d5d5d'\n           }\n        },\n        y: {\n            ticks: {\n                // forces step size to be 50 units\n                stepSize: 1\n            },\n            grid: {\n                color: '#5d5d5d'\n            }\n        }\n    },\n    maintainAspectRatio: false\n};\n\nfunction Users({users}) {\n    const { t } = useTranslation()\n\n    const MAX_DAYS = 5\n    let usersData = getForDays(users, MAX_DAYS)\n    const countOfUserBefore = users.length - usersData.length\n\n    const dataForDays = []\n    for(let i = 0; i < MAX_DAYS; i++) {\n        let item = i === 0 ? countOfUserBefore : dataForDays[i - 1]\n\n        item += getForOneDay(usersData, MAX_DAYS - i).length\n        dataForDays.push(item)\n    }\n\n    const data = {\n        labels: new Array(5).fill(Date.now()).map((item, idx) => new Date(item - idx * DAY_SECONDS * 1000).getDate()).reverse(),\n        datasets: [\n            {\n                label: t(\"new_users_label\"),\n                data: dataForDays,\n                fill: false,\n                backgroundColor: 'rgb(255, 99, 132)',\n                borderColor: 'rgba(255, 99, 132, 0.2)',\n            },\n        ],\n    }\n\n    return (\n        <div className=\"stat new_users\">\n            <h3>{t(\"new_users\")}</h3>\n            <div className=\"chart\">\n                <Line data={data} height={200} options={OPTIONS}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Users\n","import './index.sass'\nimport { useTranslation } from 'react-i18next'\n\nconst MAX_TOP_COUNT = 10\n\nfunction PopularWords({words}) {\n    const { t } = useTranslation()\n    const popularity = {}\n    words = words.map(item => item.toLowerCase())\n    words.forEach(item => popularity[item] = popularity[item] ? popularity[item] + 1 : 1)\n    const mostPopular = Object.keys(popularity).sort((first, second) => popularity[first] - popularity[second])\n    const top = mostPopular.reverse().slice(0, MAX_TOP_COUNT)\n\n    return (\n        <div className=\"stat popular_words\">\n            <h3>{t(\"popular_words\")}</h3>\n            <div className=\"content\">\n                {top.map((item, idx) => <span key={idx}>{item}</span>)}\n            </div>\n        </div>\n    )\n}\n\nexport default PopularWords\n","import './index.sass'\nimport { useTranslation } from 'react-i18next'\n\nfunction Using({count}) {\n    const {t} = useTranslation()\n    return (\n        <div className=\"stat using\">\n            <h3>{t('using')}</h3>\n            <div className=\"content\">\n                <span>{count}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Using\n","import './index.sass'\nimport 'firebase/firestore';\nimport {useFirestore, useFirestoreCollectionData} from \"reactfire\"\nimport {getForDays, MESSAGES, USERS} from \"../../helpers/collections\"\nimport UsersCount from \"../../Components/UsersCount\";\nimport Users from \"../../Components/Users\";\nimport PopularWords from \"../../Components/PopularWords\";\nimport Using from \"../../Components/Using\";\n\nfunction Main() {\n    const usersRef = useFirestore().collection(USERS)\n    const users = useFirestoreCollectionData(usersRef).data\n\n    const messagesRef = useFirestore().collection(MESSAGES)\n    const messages = useFirestoreCollectionData(messagesRef).data\n    const usingCount = getForDays(messages, 1).length\n\n    return (\n        <div className=\"page\">\n            <UsersCount count={users.length}/>\n            <Users users={users}/>\n            <PopularWords words={messages.map(item => item.text)}/>\n            <Using count={usingCount}/>\n        </div>\n    )\n}\n\nexport default Main\n","import './index.sass'\nimport {useTranslation} from \"react-i18next\";\n\nfunction Header() {\n    const { t } = useTranslation()\n    return (\n        <header>\n            <h1>{t('title')}</h1>\n        </header>\n    )\n}\n\nexport default Header\n","import './index.sass'\n\nfunction Loading() {\n    return (\n        <div className=\"loading_container\">\n            <div className=\"loading_spin\">\n                <div className=\"front\"/>\n                <div className=\"back\"/>\n                <div className=\"right\"/>\n                <div className=\"left\"/>\n                <div className=\"top\"/>\n                <div className=\"bottom\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Loading\n","import './App.sass'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\"\nimport {SuspenseWithPerf} from \"reactfire\";\nimport Main from \"./Pages/Main\"\nimport Header from \"./Components/Header\";\nimport Loading from \"./Components/Loading\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <SuspenseWithPerf fallback={<Loading/>} traceId=\"page\">\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Main/>\n                        </Route>\n                    </Switch>\n                </Router>\n            </SuspenseWithPerf>\n        </div>\n    )\n}\n\nexport default App\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { FirebaseAppProvider } from 'reactfire';\nimport {firebaseConfig} from \"./helpers/configs\";\nimport './i18next';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <FirebaseAppProvider firebaseConfig={firebaseConfig} suspense={true}>\n         <App/>\n      </FirebaseAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyA3L0MLIy9lt6-hRXn2-IrXSp0-gN9xjgg\",\n    authDomain: \"definitionsbot-4f039.firebaseapp.com\",\n    projectId: \"definitionsbot-4f039\",\n    storageBucket: \"definitionsbot-4f039.appspot.com\",\n    messagingSenderId: \"443576261082\",\n    appId: \"1:443576261082:web:212f497bb7190613e4c8e3\"\n};"],"sourceRoot":""}